# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest

# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'

# - script: |
#     npm install
#     npm run build
#   displayName: 'npm install and build'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
        displayName: 'Install Node.js 16.x'

      - script: |
          cd AngularWithAzure/
          npm install -g @angular/cli
          npm install
          ng build --prod
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/angular-with-azure/'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'drop'
          publishLocation: 'Container'

- stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentDevelopment
    pool:
      vmImage: 'ubuntu-latest'
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure for Students(1d392b62-f944-4ec3-b35a-0bcb830346fb)'
              appType: 'webAppLinux'
              WebAppName: 'IPSCentral'
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
              RuntimeStack: 'NODE|16-lts'
              StartupCommand: 'pm2 serve /home/site/wwwroot -no-daemon-spa'

- stage: Acceptance
  dependsOn: [ Development ]
  displayName: 'Deploy to Acceptance'
  jobs:
    - job:  DeployToAcceptance
      displayName: 'DeployAcceptance'
      steps:
      - script: echo Deploying to Acceptance
- stage: Production
  dependsOn: [ Acceptance ]
  displayName: 'Deploy to Production'
  jobs:
    - deployment: DeployProduction
      pool:
        vmImage: 'ubuntu-latest'
      environment: Production
      strategy:
        runOnce:
          deploy:
            steps:
            - script: echo Deploying to Production

